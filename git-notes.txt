#Download Git
https://www.udacity.com/wiki/ud775/install-git/install-git-mac

#Set up the workspace
Color, sublime etcâ€¦

# Download Astroid as a test folder to play around with
$ git clone https://github.com/udacity/asteroids.git 

# Creat a .git file
$ git init

# check status frequently
$ git status

#compare Working Directorry & Staging Area
$ git diff

#compare Staging Area & commit 1
$ git diff --staged

#compare commit1 & commit2
$ git diff commit1 commit2

#add a new branch, called "easy-mode"
$ git branches easy-mode

#check what branches you have
$ git branch

#change to a branch, called "easy-mode"
$ git checkout easy mode

#create and checkout a new brand, called 'hard-mode'
$ git checkout -b hard mode

#merge branch1 and branch2
Method 1
$ git merge branch1 branch2
Method 2, if checkout branch1
$ git merge branch2

#delete branch1
$ git branch -d branch1 !!!if branch1 didn't merge with any other branches, then it will not appear anymore by "$ git log", unless use the commit ID directly.

#show difference between a commit with its parent
$ git show commit_ID

#manually fix the conflicts
>>>head
mine
>>>common accester
original
>>>other branch
other's work

#check if there's a remote branch
$ git remote
#chreate a remote branch
$ git remote origin #the first branch should be called origin

#upload files to GitHub
$ git push origin local-branch #remote branch goes first

#download files from GitHub
$ git pull origin local-branch #remote branch goes first

#change the content in a commit
$ git commit --amend --reset-author

#get new info from GitHub
$ git fetch #this creates a new branch, then I need to use "$ git merge" to merge the two branches
$get pull #may combine the above two steps together

#pull request

#Removing the last commit
git reset --hard HEAD^
#Removing the 2 commit
git reset --hard HEAD~2

!!!!Checkout the branch, which you want to merge into!!!!